{"ast":null,"code":"// 12)\nexport function getVideogames() {\n  return function (dispatch) {\n    return fetch(`http://localhost:3001/videogames`).then(response => response.json()).then(json => {\n      dispatch({\n        type: \"GET_VIDEOGAMES\",\n        payload: json\n      });\n    });\n  };\n} //   20)\n\nexport const orderByCreator = source => (dispatch, getState) => {\n  const videogames = getState().videogames.filter(function (G) {\n    return G.source === source;\n  });\n  dispatch({\n    type: \"ORDER_BY_CREATOR\",\n    payload: {\n      videogames,\n      source\n    }\n  });\n}; //   21)\n\nexport const orderAsc = type => (dispatch, getState) => {\n  const filtered = getState().filteredVideogames;\n  let videogamesOrder = [];\n\n  if (type === \"asc_name\") {\n    videogamesOrder = filtered.sort((a, b) => {\n      if (a.name > b.name) return 1;\n      if (a.name < b.name) return -1;\n      return 0;\n    });\n  } else if (type === \"asc_rating\") {\n    videogamesOrder = filtered.sort((a, b) => a.rating - b.rating);\n  }\n\n  dispatch({\n    type: \"ORDER_ASC_RATING\",\n    payload: {\n      videogamesOrder,\n      name: type\n    }\n  });\n};\nexport const orderDesc = type => (dispatch, getState) => {\n  const filtered = getState().filteredVideogames;\n  let videogamesOrder = [];\n\n  if (type === \"desc_name\") {\n    videogamesOrder = filtered.sort((a, b) => {\n      if (a.name < b.name) return 1;\n      if (a.name > b.name) return -1;\n      return 0;\n    });\n  } else if (type === \"desc_rating\") {\n    videogamesOrder = filtered.sort((a, b) => b.rating - a.rating);\n  }\n\n  dispatch({\n    type: \"ORDER_DESC_RATING\",\n    payload: {\n      videogamesOrder,\n      name: type\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/TATAC/OneDrive/Desktop/HENRY/PROYECTO INDIVIDUAL/FINAL/PI-Videogames (1)/PI-Videogames-main/client/src/actions/index.js"],"names":["getVideogames","dispatch","fetch","then","response","json","type","payload","orderByCreator","source","getState","videogames","filter","G","orderAsc","filtered","filteredVideogames","videogamesOrder","sort","a","b","name","rating","orderDesc"],"mappings":"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","sourcesContent":["// 12)\r\n\r\nexport function getVideogames() {\r\n    return function (dispatch) {\r\n      return fetch(`http://localhost:3001/videogames`)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n          dispatch({ type: \"GET_VIDEOGAMES\", payload: json });\r\n        });\r\n    };\r\n  }\r\n//   20)\r\n  \r\n  export const orderByCreator = (source) => (dispatch, getState) => {\r\n    const videogames = getState().videogames.filter(function (G) {\r\n        return G.source === source\r\n      });\r\n    dispatch({\r\n      type: \"ORDER_BY_CREATOR\",\r\n      payload: {\r\n        videogames,\r\n        source,\r\n      },\r\n    });\r\n  };\r\n\r\n//   21)\r\nexport const orderAsc = (type) => (dispatch, getState) => {\r\n    const filtered = getState().filteredVideogames;\r\n    let videogamesOrder = []\r\n  \r\n      if (type === \"asc_name\") {\r\n        videogamesOrder = filtered.sort((a, b) => {\r\n          if (a.name > b.name) return 1;\r\n          if (a.name < b.name) return -1;\r\n          return 0;\r\n        });\r\n      } else if (type === \"asc_rating\") {\r\n        videogamesOrder = filtered.sort(\r\n          (a, b) => a.rating - b.rating\r\n        );\r\n      }\r\n      dispatch({\r\n        type: \"ORDER_ASC_RATING\",\r\n        payload: {\r\n          videogamesOrder,\r\n          name: type,\r\n        },\r\n      });\r\n  }\r\n  \r\n  \r\n  export const orderDesc = (type) => (dispatch, getState) => {\r\n    const filtered = getState().filteredVideogames;\r\n    let videogamesOrder = []\r\n      \r\n      if (type === \"desc_name\") {\r\n        videogamesOrder = filtered.sort((a, b) => {\r\n          if (a.name < b.name) return 1;\r\n          if (a.name > b.name) return -1;\r\n          return 0;\r\n        });\r\n      } else if (type === \"desc_rating\") {\r\n        videogamesOrder = filtered.sort(\r\n          (a, b) => b.rating - a.rating\r\n        );\r\n      }\r\n      dispatch({\r\n        type: \"ORDER_DESC_RATING\",\r\n        payload: {\r\n          videogamesOrder,\r\n          name: type,\r\n        },\r\n      });\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}